/*
  .p = players
  .t = teams
  .m = match
  .bl = blocks
  .ac = actions
  .v = vehicle
  .c = chat
  .l = login
*/

@font-face {
  font-family: "p";
  src: url("p.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  transition: all 0.15s linear;
  font-family: inherit;
  font-size: inherit;
}

html, body {
  background-color: #222;
  background-size: 10vmin 10vmin;
  background-image: linear-gradient(to right, rgba(0, 0, 0, .2) 1vmin, transparent 1vmin), linear-gradient(to bottom, rgba(0, 0, 0, .2) 1vmin, transparent 1vmin);
  overflow: hidden;
  text-align: center;
  font-family: "p", monospace;
  font-size: 4vmin;
  text-shadow: rgba(255, 255, 255, .2) 0.2vmin 0.2vmin;
  accent-color: #ff0;
  --color-tA: #FFF;
  --color-tB: #FFF;
  --player-rotate: 0deg;
  --player-scale: 1.8;
}

body.loading::after {
  position: fixed;
  top: 35vh;
  left: 45vw;
  display: block;
  content: "\a";
  width: 10vw;
  height: 10vw;
  clip-path: circle(50% at 50% 50%);
  border: 1vmin solid #AAA;
  border-top: 1vmin solid #FFF;
  box-shadow: 0 0 1rem #AAA;
  opacity: 0.8;
  animation: 1s ease rotate infinite;
}

main {
  --field-w: 90vmin;
  --field-h: 90vmin;
  width: var(--field-w);
  height: var(--field-h);
  margin: 5vmin auto;
  position: relative;
  background-size: 1% 1%;
  background-color: #222;
  background-image: linear-gradient(to right, rgba(0, 0, 0, .1) 1px, transparent 1px), linear-gradient(to bottom, rgba(0, 0, 0, .1) 1px, transparent 1px);
  box-shadow: 0 0 300vmin 0.5vmin rgba(80, 100, 100, 0.5);
  transition: all 0.7s ease;
}

main.ready:not(.started), main.ended {
  filter: sepia(50%);
}

main:not(.ready) {
  transform: scale(9) rotate(45deg);
}

main::before {
  content: "\a";
  height: 1%;
  width: 100%;
  background-color: var(--color-tB);
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  opacity: .5;
}

b {
  color: #ff0;
  font-weight: normal;
}

i {
  color: #40cf33;
  font-style: normal;
}

main::after {
  content: "\a";
  height: 1%;
  width: 100%;
  background-color: var(--color-tA);
  position: absolute;
  display: block;
  bottom: 0;
  left: 0;
  opacity: .5;
}

.track, .p, .ba, .bl {
  position: absolute;
  top: 0;
  left: 0;
  height: 1%;
  width: 1%;
  --block-w: var(--field-w) / 100;
  --block-h: var(--field-h) / 100;
  --tX: calc(var(--px) * var(--block-w));
  --tY: calc(var(--py) * var(--block-h));
  transform: translateX(var(--tX)) translateY(var(--tY));
}

section {
  position: absolute;
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 100;
}

section p {
  color: #fff;
  font-size: 150%;
}

.l {
  width: 50vmin;
  position: relative;
  margin-top: 7vh;
}

.l button {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  margin: 0;
  padding: 0 2vmin;
  font-size: 100%;
  font-weight: bold;
}

h1 {
  font-size: 500%;
  color: #e7ff00;
  text-shadow: #09624f 1vmin 1vmin;
}

a, a:visited {
  color: #fff;
}

a:hover {
  color: #777;
}

.sh {
  display: none;
}

.p {
  z-index: 2;
}

.p::before {
  content: "\a";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transform: rotate(var(--player-rotate)) scale(var(--player-scale));
  transition: transform 0.2s ease, clip-path 1s linear;
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.2) 30%, transparent 30%, transparent 70%, rgba(0, 0, 0, 0.2) 70%), linear-gradient(to left, #428def 20%, transparent 20%, transparent 100%);
}

.p[data-v='0']::before {
  clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 100%, 25% 50%, 0 0);
}

.p[data-v='1']::before {
  clip-path: polygon(0 0, 100% 50%, 0 100%, 20% 65%, 0 50%, 20% 35%);
}

.p[data-v='6']::before {
  clip-path: polygon(0 0, 100% 50%, 0 100%, 100% 80%, 0 50%, 100% 20%);
}

.p[data-v='5']::before {
  clip-path: polygon(0 0, 10% 50%, 0 100%, 50% 15%, 100% 50%, 50% 85%);
}

.p[data-v='4']::before {
  clip-path: polygon(0 0, 100% 50%, 0 100%, 55% 0, 100% 50%, 55% 100%);
}

.p[data-v='2']::before {
  clip-path: polygon(15% 0, 100% 30%, 100% 70%, 15% 100%, 0 70%, 0 30%);
}

.p[data-v='3']::before {
  clip-path: polygon(70% 10%, 100% 50%, 70% 90%, 0 100%, 15% 50%, 0 0);
}

.p[data-v='7']::before {
  clip-path: polygon(20% 15%, 100% 50%, 20% 85%, 0% 65%, 30% 50%, 0% 35%);
}

.p::after {
  content: attr(data-name);
  position: absolute;
  top: -2.8vmin;
  left: -950%;
  display: block;
  color: white;
  width: 2000%;
  opacity: 0.2;
  font-size: 50%;
}

.p.me::after {
  opacity: 0.8;
}

.p.me:not([data-info = ''])::after {
  content: attr(data-info);
  color: #e03639;
  background-color: rgba(0, 0, 0, .2);
  background-image: linear-gradient(to right, rgba(0, 0, 0, .7) calc(var(--energy) * 1%), transparent calc(var(--energy) * 1%));
}

.p.me .sh {
  display: block;
  height: 0;
  width: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  box-shadow: 0 0 0 0 white;
}

.p.me[data-energy='100'] .sh {
  box-shadow: 0 0 1rem 0.4rem var(--color-tA);
}

.p.me[data-energy='100'][data-team='b'] .sh {
  box-shadow: 0 0 1rem 0.4rem var(--color-tB);
}

.p.me[data-team][data-empowered='true'] .sh {
  box-shadow: 0 0 0.1rem 0.1rem white;
  mix-blend-mode: difference;
}

.p:not([data-jumping="0"]) {
  --player-scale: 2.7;
}

.ba {
  transition: all 0.1s ease-in;
  z-index: 2;
}

.ba::before {
  content: "\a";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: radial-gradient(#fff, #aaa);
  box-shadow: 0 0 1rem 0.05rem white;
  border-radius: 50%;
  transform: scale(var(--ball-scale, 0.9));
  transition: transform 0.05s ease-in;
}

.t {
  position: absolute;
  display: block;
  width: 35vmin;
  color: var(--color-tA);
  left: 0;
  top: -5vmin;
  text-align: left;
}

.t::before {
  content: attr(data-name);
}

.t::after {
  content: " - " attr(data-score);
}

.t + .t {
  color: var(--color-tB);
  left: initial;
  right: 0;
  text-align: right;
}

.t + .t::after {
  content: attr(data-name);
}

.t + .t::before {
  content: attr(data-score) " - ";
}

.m {
  position: absolute;
  display: block;
  width: 20%;
  color: white;
  left: 40%;
  top: -5vmin;
}

.m::before {
  content: attr(data-time);
}

.m[data-name="training"]::before {
  display: none;
}

.m[data-started="false"]::after, .m[data-ended="true"]::after {
  position: absolute;
  top: 10vmin;
  width: 200%;
  left: -50%;
}

.m[data-started="false"]::after {
  content: "waiting for players\aT = switch team";
  white-space: pre;
}

.m[data-ended="true"]::after {
  content: "match ended";
}

.bl {
  background-color: #aba2a2;
  border: 0.005vmin solid #313030;
}

.info {
  color: white;
  position: fixed;
  bottom: 0.9vmin;
  left: calc(50vw + 5vmin);
  width: 40vmin;
  text-align: right;
  font-size: 80%;
}

.ac {
  position: fixed;
  bottom: 0.9vmin;
  left: calc(50vw - 45vmin);
  width: 50vmin;
}

.ac.h {
  display: none;
}

.ac button {
  line-height: 2.5vmin;
}

button {
  color: #428def;
  background-image: linear-gradient(#111, #222);
  border: 0.1vmin #747474 solid;
  padding: 0.4vmin 1vmin;
  float: left;
  margin-right: 0.5vmin;
  cursor: pointer;
  font-size: 60%;
}

button:hover {
  filter: brightness(180%);
}

.popup {
  display: block;
  background-image: linear-gradient(#222, #111);
  border: 0.1vmin #747474 solid;
  position: fixed;
  color: white;
  padding: 1vmin;
  top: -100vh;
  left: 20vw;
  width: 60vw;
  z-index: 50;
  box-shadow: 0 0 1vmax 1vmax rgba(0, 0, 0, 0.64);
  max-height: 70vh;
  overflow: auto;
  transition: all 0.7s ease;
  opacity: 0;
}

.popup[open] {
  top: 20vh;
  box-shadow: none;
  opacity: 1;
}

.popup::backdrop {
  background-color: rgba(0, 0, 0, 0.25);
}

.popup button {
  float: right;
  font-size: 100%;
  margin: 0;
  margin-left: 0.5vmin;
}

.popup input, .popup select {
  margin-top: 1vmin;
}

input, select {
  background-color: black;
  background-image: linear-gradient(#222, #111);
  border: 0.1vmin #747474 solid;
  color: white;
  width: 100%;
  padding: 1vmin;
  cursor: pointer;
  caret-color: #bce618;
}

input:not([type="radio"]):active,
input:not([type="radio"]):focus-visible,
select:active,
select:focus-visible,
button:active,
button:focus-visible {
  box-shadow: 0 0 0.1rem 0.05rem #bce618;
  background-image: linear-gradient(#222, #333);
}

input[type="radio"]:active,
input[type="radio"]:focus-visible {
  outline: none;
  filter: drop-shadow(0 0 0.1rem #bce618);
}

label {
  width: 100%;
  text-align: left;
  color: #DDD;
  margin-bottom: 3vmin;
  display: block;
  cursor: pointer;
}

.c {
  position: fixed;
  right: 1vmin;
  top: 1vmin;
  bottom: 1vmin;
  left: calc(50% + 50vmin);
  padding: 1vmin;
  opacity: 0.55;
  font-size: 70%;
  color: white;
  text-align: left;
}

.c.h {
  display: none;
}

.c:hover, .c:focus-within {
  opacity: 1;
}

.c input {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
}

.c ul {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 7vmin;
}

.c li {
  list-style: none;
}

.ping {
  position: absolute;
  top: 0;
  right: 0.6vmin;
  font-size: 75%;
  color: white;
}

.track > div {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
  clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);
}

.c .a, tr.a, h3.a {
  color: var(--color-tA);
}

.c .b, tr.b, h3.b {
  color: var(--color-tB);
}

.p[data-team='a']::before, .track.a > div {
  background-color: var(--color-tA);
}

.p[data-team='b']::before, .track.b > div {
  background-color: var(--color-tB);
}

.v {
  position: relative;
  display: flex;
  justify-content: space-around;
  align-items: center;
}

.v .p {
  height: 15vmin;
  width: 15vmin;
  position: relative;
}

.v .p::before {
  background-color: #fff;
  animation: 20s linear rotate infinite;
}

.v .p::after {
  font-size: 200%;
  top: -12vmin;
  width: 300%;
  left: -90%;
}

.v .p .sh {
  box-shadow: 0 0 3rem 2rem rgba(255, 255, 255, .5);
}

.v .s {
  display: flex;
  flex-direction: column;
}

.v .s > div {
  display: grid;
  grid-template-columns: 0.7rem auto;
  gap: 0.2rem;
  padding: 0 0.4rem
}

.v .s > div :is(input, label) {
  margin: 0;
}

.v .s > div > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

.v .s > div:has(input:checked) {
  background-color: hsla(0, 0%, 100%, 0.2);
  outline: 0.05rem solid #bce618;
  outline-offset: -0.05rem;
}

.v .i {
  width: 35%;
}

.v .p.me:not([data-info = ''])::after {
  background: transparent;
  color: white;
}

.v p {
  position: relative;
  background: #d24c2f;
  width: 100%;
  border-bottom: 1.5vmin solid #b9b994;
  margin-bottom: 1vmin;
}

.v p::after {
  width: calc(var(--val) * 10%);
  content: "\a";
  display: block;
  position: absolute;
  background: #4eff00;
  height: 1.5vmin;
  transition: width 1s ease;
  bottom: -1.5vmin;
  left: 0;
}

table {
  width: 100%;
  text-align: left;
  line-height: 100%;
  font-size: 80%;
  border-collapse: collapse;
}

td, th {
  padding: 0.3vh;
}

tbody tr:hover td {
  color: #fff;
  background: #222;
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.controls {
  display: none;
}
